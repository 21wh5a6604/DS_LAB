def is_disarium(n: int)->bool:
    n1=str(n)
    i=0
    a=[]
    while(i< len(str(n))):
        p=int(n1[i])*i
        return p
        i+=1
    a=a.append(p)
    return sum(a)==n
----------------------------------

def is_anagram(str1,str2):
    return (sorted(str1) == sorted(str2))
-------------------------------------
class solution:
    def anagrams(self,strs:list[str])->list[list[str]]:
        dict={}
        for word in strs:
            sortd="".join(sorted(word))
            if sortd not in dict:
                dict[sortd]=[word]
            else:
                dict[sortd].append(word)
        result = []
        for item in dict.values():
            result.append(item)
        return result
       -----------------------------
       def reverse_sentence(str1: str)->str:
    words=str1.split(" ")
    return (words[-1::-1])

reverse_sentence("hello worls")
['worls', 'hello']

#include<stdio.h>
 #include<stdlib.h>
   struct node
   {   
       int data;
       struct node*link;
   };
   struct node*head=NULL,*cur,*temp,*temp1;
   struct node*create(){
      int n;
      printf("enter number of elements");
      scanf("%d",&n);

   while(n--){
      cur=(struct node*)malloc(sizeof(struct node));
      scanf("%d",&cur->data);
      cur->link=NULL;
      if(head==NULL){
          head=cur;
          }
      else{
          temp=head;
          while(temp->link!=NULL)
          {
          temp=temp->link;
          }
          temp->link=cur;

  }
  }
  return head;
  }
  void display(struct node*head)
   {
        temp=head;
       while(temp!=NULL)
        {
        {
            printf("%d->",temp->data);
            temp = temp->link;
      }
  }

  struct node*insert_begin(int ele)
{
	 
	  
      cur = (struct node*)malloc(sizeof(struct node));
      cur->data =  ele;
      cur->link=head;
      head=cur;

  return head;
}
  struct node*inser_end(int ele)
   
{
  
      cur=(struct node*)malloc(sizeof(struct node));
      cur->data=ele;
      cur->link=NULL;
      temp=head;
      while(temp!=NULL){
          temp=temp->link;
          temp->link=cur;
      }
      return head;
}

  struct node*insert_pos(int pos,int ele)
  {
      int c = 1;
      cur=(struct node*)malloc(sizeof(struct node));
      cur->data=ele;
      temp=head;
      while( c < pos-1)
      {
          temp=temp->link;
          c++;
      }
        }
      cur->link=temp->link;
      temp->link=cur;
  return head;
  }

  struct node*delete_begin()
  {
      temp=head;
      head=temp->link;
      printf("deleted element is %d",temp->data);
      free(temp);
    return head;
  }
 
 struct node*delete_end(struct node*head)
{
	temp=head;
	while(temp->link!=NULL)
	{
		temp1=temp;
		temp=temp->link;
	}
	temp1->link=NULL;
	printf("deleted element is %d",temp->data);
	free(temp);
	return head;
}

struct node*delete_pos(struct node*head,int pod)
{
	temp=head;
	int c=1;
	while(c<pos)
	{
		temp1=temp;
		temp=temp->link;
		c++;
	}
	temp1->link=temp->link;
	printf("deleted element is %d,temp->data");
	free(temp);
	return head;
}




  int main()
{
	int ch,ele,pos;
	while(1)
	{
		printf("1-create\n 2-insert at begin\n 3-insert at end\n 4-insert at pos\n 5-delete at begin\n  6-delete at end\n 7-delete at position\n 8-display\n")
		printf("enter your choice");
		scanf("%d",&ch);
		swich(ch)
		{
			case1:head=create();
					break;
			case2:scanf("%d",ele);
				  	head=insert_begin(ele);
				  	break;
			case3:scanf("%d",ele);
					head=insert_end(ele);
					break;
			case4:printf("enter pos")
					scanf("%d",&pos);
					printf("enter element");
					
		}
	}
      int ele;
      head=create();
      display (head);
}

